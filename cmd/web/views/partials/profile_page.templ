//go:generate templ generate
package partials

import (
	"sd/cmd/web/views/layouts"
	"sd/pkg/types"
	"strconv"
)

func cond(test bool, a, b string) string {
	if test {
		return a
	}
	return b
}

templ ProfilePage(
	instances []types.Instance,
	devices []types.Device,
	profiles []types.Profile,
	pages []types.Page,
	currentInstance types.Instance,
	currentDevice *types.Device,
	currentProfile *types.Profile,
	currentPage *types.Page,
) {
	@layouts.Base("Home") {
		<div class="flex h-full">
			@InstancePanel(instances)
			@DevicePanel(currentInstance, devices)
			@ProfilePanel(currentInstance, currentDevice, profiles)
			<!-- Right Panel - Device Config -->
			<div class="flex-1 bg-sd-darker" id="main-content">
				<h1 class="text-xl font-semibold mb-4 text-center">{ currentProfile.Name } Profile</h1>
				<div class="flex flex-row w-full">
					<div class="w-32 p-6 flex items-center justify-center text-gray-400">
						for i, page := range pages {
							if page.ID == currentPage.ID && i > 0 {
								<a
									href={ templ.URL("/instance/" + currentInstance.ID + "/device/" + currentDevice.ID + "/profile/" + currentProfile.ID + "/page/" + pages[i-1].ID) }
									class="hover:text-white transition-colors"
								>
									<svg class="w-8 h-8" fill="none" stroke="currentColor" viewBox="0 0 24 24">
										<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
									</svg>
								</a>
							}
						}
					</div>
					<div class="flex-grow p-6 text-center text-gray-400">
						// If device is a pedal, show pedal config
						if currentDevice.Type == "pedal" {
							@StreamDeckPedal(currentInstance, currentDevice, currentProfile, currentPage)
						}
						if currentDevice.Type == "xl" {
							@StreamDeckXL(currentInstance, currentDevice, currentProfile, currentPage)
						}
						if currentDevice.Type == "plus" {
							@StreamDeckPlus(currentInstance, currentDevice, currentProfile, currentPage)
						}
						<nav class="flex justify-center mt-4">
							<ul class="flex space-x-2">
								for i, page := range pages {
									<li>
										<a
											href={ templ.URL("/instance/" + currentInstance.ID + "/device/" + currentDevice.ID + "/profile/" + currentProfile.ID + "/page/" + page.ID) }
											class={ "px-3 py-2 rounded-lg transition-colors " + cond(page.ID == currentPage.ID, "bg-sd-accent text-white", "bg-sd-light hover:bg-sd-lighter text-gray-300") }
										>
											{ strconv.Itoa(i+1) }
										</a>
									</li>
								}
								<li>
									<a
										href="#"
										class={ "px-3 py-2 rounded-lg transition-colors bg-sd-light hover:bg-sd-lighter text-gray-300" }
										hx-post={ "/api/page/create?instanceId=" + currentInstance.ID + "&deviceId=" + currentDevice.ID + "&profileId=" + currentProfile.ID }
										hx-target="body"
										hx-swap="innerHTML"
									>
										+
									</a>
								</li>
							</ul>
						</nav>
					</div>
					<div class="w-32 p-6 flex items-center justify-center text-gray-400">
						for i, page := range pages {
							if page.ID == currentPage.ID && i < len(pages)-1 {
								<a
									href={ templ.URL("/instance/" + currentInstance.ID + "/device/" + currentDevice.ID + "/profile/" + currentProfile.ID + "/page/" + pages[i+1].ID) }
									class="hover:text-white transition-colors"
								>
									<svg class="w-8 h-8" fill="none" stroke="currentColor" viewBox="0 0 24 24">
										<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
									</svg>
								</a>
							}
						}
					</div>
				</div>
			</div>
			<div class="w-64 bg-sd-dark border-r border-sd-darker p-4">
				<h2 class="text-xl font-semibold mb-4"></h2>
				<div>
					<ul>
						<li class="mb-2">
							<div class="flex items-center p-2 bg-sd-light rounded cursor-pointer" onclick="this.nextElementSibling.classList.toggle('hidden'); this.querySelector('svg').classList.toggle('rotate-90')">
								<svg class="w-4 h-4 mr-2 transform transition-transform duration-200" fill="none" stroke="currentColor" viewBox="0 0 24 24">
									<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
								</svg>
								<svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
									<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 12h18M3 6h18M3 18h18"></path>
								</svg>
								<span>Navigation</span>
							</div>
							<ul class="ml-4 mt-1 hidden">
								<li class="p-2 hover:bg-sd-light rounded cursor-pointer">Profile</li>
								<li class="p-2 hover:bg-sd-light rounded cursor-pointer">Page</li>
								<li class="p-2 hover:bg-sd-light rounded cursor-pointer">Single Action</li>
								<li class="p-2 hover:bg-sd-light rounded cursor-pointer">Toggle Action</li>
								<li class="p-2 hover:bg-sd-light rounded cursor-pointer">Multi Action</li>
							</ul>
						</li>
						<li class="mb-2">
							<div class="flex items-center p-2 bg-sd-light rounded cursor-pointer" onclick="this.nextElementSibling.classList.toggle('hidden'); this.querySelector('svg').classList.toggle('rotate-90')">
								<svg class="w-4 h-4 mr-2 transform transition-transform duration-200" fill="none" stroke="currentColor" viewBox="0 0 24 24">
									<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
								</svg>
								<svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
									<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 12h18M3 6h18M3 18h18"></path>
								</svg>
								<span>Keyboard</span>
							</div>
							<ul class="ml-4 mt-1 hidden">
								<li class="p-2 hover:bg-sd-light rounded cursor-pointer">Shortcut</li>
								<li class="p-2 hover:bg-sd-light rounded cursor-pointer">Text</li>
							</ul>
						</li>
						<li class="mb-2">
							<div class="flex items-center p-2 bg-sd-light rounded cursor-pointer" onclick="this.nextElementSibling.classList.toggle('hidden'); this.querySelector('svg').classList.toggle('rotate-90')">
								<svg class="w-4 h-4 mr-2 transform transition-transform duration-200" fill="none" stroke="currentColor" viewBox="0 0 24 24">
									<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
								</svg>
								<svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
									<path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 12h18M3 6h18M3 18h18"></path>
								</svg>
								<span>Command</span>
							</div>
							<ul class="ml-4 mt-1 hidden">
								<li class="p-2 hover:bg-sd-light rounded cursor-pointer">Execute</li>
							</ul>
						</li>
					</ul>
					<button
						class="w-full p-3 mt-4 bg-sd-light hover:bg-sd-lighter text-white font-medium rounded transition-colors flex items-center justify-center gap-2"
						hx-get="/"
						hx-target="#dialog-container"
						hx-trigger="click"
						hx-swap="innerHTML"
					>
						<svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
							<path fill-rule="evenodd" d="M10 3a1 1 0 011 1v5h5a1 1 0 110 2h-5v5a1 1 0 11-2 0v-5H4a1 1 0 110-2h5V4a1 1 0 011-1z" clip-rule="evenodd"></path>
						</svg>
						Use
					</button>
					<button
						class="w-full p-3 mt-4 bg-sd-light hover:bg-sd-lighter text-white font-medium rounded transition-colors flex items-center justify-center gap-2"
						hx-get={ "/partials/page/delete-dialog?instanceId=" + currentInstance.ID + "&deviceId=" + currentDevice.ID + "&profileId=" + currentProfile.ID + "&pageId=" + currentPage.ID }
						hx-target="#dialog-container"
						hx-trigger="click"
						hx-swap="innerHTML"
					>
						<svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
							<path fill-rule="evenodd" d="M3 10a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1z" clip-rule="evenodd"></path>
						</svg>
						Delete Page
					</button>
					<button
						class="w-full p-3 mt-4 bg-red-600 hover:bg-red-700 text-white font-medium rounded transition-colors flex items-center justify-center gap-2"
						hx-get={ "/partials/profile/delete-dialog?instanceId=" + currentInstance.ID + "&deviceId=" + currentDevice.ID + "&profileId=" + currentProfile.ID }
						hx-target="#dialog-container"
						hx-trigger="click"
						hx-swap="innerHTML"
					>
						<svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5" viewBox="0 0 20 20" fill="currentColor">
							<path fill-rule="evenodd" d="M9 2a1 1 0 00-.894.553L7.382 4H4a1 1 0 000 2v10a2 2 0 002 2h8a2 2 0 002-2V6a1 1 0 100-2h-3.382l-.724-1.447A1 1 0 0011 2H9zM7 8a1 1 0 012 0v6a1 1 0 11-2 0V8zm5-1a1 1 0 00-1 1v6a1 1 0 102 0V8a1 1 0 00-1-1z" clip-rule="evenodd"></path>
						</svg>
						Delete Profile
					</button>
				</div>
			</div>
		</div>
	}
}
